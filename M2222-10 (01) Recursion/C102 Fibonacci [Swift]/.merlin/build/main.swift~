func fibon (_ n: Int) -> Int {
     total -= 1 
    if n <= 2 {
        if total < 1 {
            print("Terminal case, returning 1.")
        }
        print("Calculating fibonacci("+String(n)+")...")
        return 1
    } else {
     //   if total < 0 {
     //       print("Non-terminal case, returning " + String(n) + ".")
     //   }
        print("Calculating fibonacci("+String(n)+")...")
        let finale = fibon(n-1) + fibon(n-2)
        return finale
    }
}
// ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩  ⇩
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
let n = 7
// DO NOT ALTER THE TEXT BETWEEN THESE LINES =========={M{E{R{L{I{N{1}N}I}L}R}E}M}=====================================
// ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧  ⇧

// Add your code below:

var total = n
if n <= 2 {
    print("Calculating fibonacci("+String(n)+")...")
    print("Terminal case, returning 1.")
    print("The final result is: 1.")
} else {
   /* while num > 0 {
        if num > 1 {
        print("Calculating fibonacci(" + String(num) + ")...")
        }
        num -= 1
    }
    print("Terminal case, returning 1.")
    print("Calculating fibonacci(1)...")
    print("Terminal case, returning 1.")
    */
    let last = String(fibon(n))
    print("Non-terminal case, returning "  + last + ".")
    print("The final result is: " + last + ".")
}
